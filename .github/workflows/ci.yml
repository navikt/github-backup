name: Build and deploy main
on:
  push:
    branches:
      - main
    paths-ignore:
      - "*.md"
  workflow_dispatch:

jobs:
  build:
    name: Build all the things
    runs-on: ubuntu-20.04
    permissions:
      contents: read
      packages: write
      id-token: write
    outputs:
      img: ${{ steps.docker-push.outputs.image }}
    env:
      BUILDER_IMG: "cgr.dev/chainguard/go:1.20"
      RUNNER_IMG: "cgr.dev/chainguard/wolfi-base"
      BASEIMG_IDENTITY: "https://github.com/chainguard-images/images/.github/workflows/release.yaml@refs/heads/main"
      BASEIMG_ISSUER: "https://token.actions.githubusercontent.com"
    steps:
      - uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8 # ratchet:actions/checkout@v3
      - name: Install cosign
        uses: sigstore/cosign-installer@7bca8b41164994a7dc93749d266e2f1db492f8a2 # ratchet:sigstore/cosign-installer@main
        with:
          cosign-release: 'v2.0.0'
      - name: Verify builder image
        run: cosign verify --certificate-identity ${{ env.BASEIMG_IDENTITY }} --certificate-oidc-issuer ${{ env.BASEIMG_ISSUER }} ${{ env.BUILDER_IMG }}
      - name: Verify runner image
        run: cosign verify --certificate-identity ${{ env.BASEIMG_IDENTITY }} --certificate-oidc-issuer ${{ env.BASEIMG_ISSUER }} ${{ env.RUNNER_IMG }}
      - uses: nais/docker-build-push@57b4262cb7e56f6b05678246342bad26b5025e91 # ratchet:nais/docker-build-push@v0
        id: docker-push
        with:
          team: aura
          push_image: true
          pull: true
          project_id: ${{ vars.NAIS_MANAGEMENT_PROJECT_ID }}
          identity_provider: ${{ secrets.NAIS_WORKLOAD_IDENTITY_PROVIDER }}
      - name: Sign the container image
        run: cosign sign --yes ${{ steps.docker-push.outputs.image }}
      - name: Create SBOM
        uses: aquasecurity/trivy-action@8bd2f9fbda2109502356ff8a6a89da55b1ead252 # ratchet:aquasecurity/trivy-action@master
        with:
          scan-type: 'image'
          format: 'cyclonedx'
          output: 'cyclone.sbom.json'
          image-ref: ${{ steps.docker-push.outputs.image }}
      - name: Attest image
        run: cosign attest --yes --predicate cyclone.sbom.json --type cyclonedx ${{ steps.docker-push.outputs.image }}

  deploy:
    name: Deploy to prod
    needs: build
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8 # ratchet:actions/checkout@v3
      - uses: nais/deploy/actions/deploy@fff9ae049178e5d3dca5c9600cf78acce63c0708 # ratchet:nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: prod-gcp
          RESOURCE: .nais/nais.yaml,.nais/alerts.yaml
          IMAGE: ${{ needs.build.outputs.img }}
          VARS: .nais/prod.yaml
