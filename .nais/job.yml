apiVersion: v1
kind: Secret
metadata:
  labels:
    team: aura
  name: github-backup
  namespace: aura
data:
  GITHUB_TOKEN: "{{ GITHUB_TOKEN }}"
  SSH_PUBLIC_KEY: "{{ SSH_PUBLIC_KEY }}"
  SSH_PRIVATE_KEY: "{{ SSH_PRIVATE_KEY }}"
  REMOTE_HOST: "{{ REMOTE_HOST }}"
  REMOTE_USER: "{{ REMOTE_USER }}"
  REMOTE_PATH: "{{ REMOTE_PATH }}"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: github-backup
  namespace: aura
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 100Gi
  storageClassName: standard
---
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  labels:
    app: github-backup
    team: aura
  name: github-backup
  namespace: aura
spec:
  concurrencyPolicy: Forbid
  schedule: "0 3 * * *"
  jobTemplate:
    metadata:
      labels:
        app: github-backup
        team: aura
      name: github-backup
      namespace: aura
  spec:
    backoffLimit: 3
    template:
      metadata:
        annotations:
          ginuudan.nais.io/dwindle: "true"
          kubectl.kubernetes.io/default-container: github-backup
        labels:
          app: github-backup
          team: aura
        name: github-backup
        namespace: aura

      spec:
        containers:
        - env:
          envFrom:
          - secretRef:
              name: github-backup
          image: {{ image }}
          imagePullPolicy: IfNotPresent
          lifecycle:
            preStop:
              exec:
                command:
                - sleep
                - "5"
          name: github-backup
          resources:
            limits:
              cpu: 500m
              memory: 512Mi
            requests:
              cpu: 200m
              memory: 256Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            privileged: false
            readOnlyRootFilesystem: true
            runAsGroup: 1069
            runAsNonRoot: true
            runAsUser: 1069
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /tmp
            name: writable-tmp
          - mountPath: /data
            name: github-backup
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: gh-docker-credentials
        restartPolicy: Never
        schedulerName: default-scheduler
        serviceAccount: github-backup
        serviceAccountName: github-backup
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir: {}
          name: writable-tmp
        - name: github-backup
          persistentVolumeClaim:
            claimName: github-backup
